pipelines:
  - name: release_bamboo
    configuration:
      runtime:
        type: image
        image:
          auto:
            language: java
            versions:
              - "11"
      environmentVariables:
        readOnly:
          NEXT_VERSION: 0.0.0
          NEXT_DEVELOPMENT_VERSION: 0.0.x-SNAPSHOT

    steps:
      - name: Release
        type: Bash
        configuration:
          inputResources:
            - name: bambooReleaseGit
          integrations:
            - name: il_automation
            - name: ecosys_entplus_deployer
        execution:
          onExecute:
            - cd $res_bambooReleaseGit_resourcePath

            # Set env
            - export CI=true
            - export JFROG_BUILD_STATUS=PASS
            - export JFROG_CLI_BUILD_NAME=ecosystem-artifactory-bamboo-plugin-release
            - export JFROG_CLI_BUILD_NUMBER=$run_number
            - export JFROG_CLI_BUILD_PROJECT=ecosys

            # Configure git
            - git checkout release
            - git remote set-url origin https://$int_il_automation_token@github.com/jfrog/bamboo-artifactory-plugin.git

            # Make sure versions provided
            - echo "Checking variables"
            - test -n "$NEXT_VERSION" -a "$NEXT_VERSION" != "0.0.0"
            - test -n "$NEXT_DEVELOPMENT_VERSION" -a "$NEXT_DEVELOPMENT_VERSION" != "0.0.0"

            # Configure JFrog CLI
            - curl -fL https://getcli.jfrog.io/v2-jf | sh && chmod +x jf
            - ./jf c rm --quiet
            - ./jf c add internal --url=$int_ecosys_entplus_deployer_url --user=$int_ecosys_entplus_deployer_user --password=$int_ecosys_entplus_deployer_apikey
            - ./jf mvnc --repo-resolve-releases ecosys-bamboo-repos --repo-resolve-snapshots ecosys-releases-snapshots --repo-deploy-snapshots ecosys-oss-snapshot-local --repo-deploy-releases ecosys-oss-release-local
            - ./jf audit --fail=false

            # Sync changes with master
            - git merge origin/master

            # Update version
            - env -i PATH=$PATH M2_HOME=$M2_HOME HOME=$HOME ./jf mvn versions:set -DnewVersion="${NEXT_VERSION}" -B
            - git commit -am "[artifactory-release] Release version ${NEXT_VERSION} [skipRun]" --allow-empty
            - git tag ${NEXT_VERSION}
            - git push
            - git push --tags

            # Run install and publish
            - >
              env -i PATH=$PATH M2_HOME=$M2_HOME HOME=$HOME
              JFROG_CLI_BUILD_NAME=$JFROG_CLI_BUILD_NAME
              JFROG_CLI_BUILD_NUMBER=$JFROG_CLI_BUILD_NUMBER
              JFROG_CLI_BUILD_PROJECT=$JFROG_CLI_BUILD_PROJECT
              ./jf mvn clean install -U -B
            - ./jf rt bag && ./jf rt bce
            - ./jf rt bp

            # Distribute release bundle
            - ./jf ds rbc ecosystem-artifactory-bamboo-plugin $NEXT_VERSION --spec=./ci/release/specs/prod-rbc-filespec.json --spec-vars="version=$NEXT_VERSION" --sign
            - ./jf ds rbd ecosystem-artifactory-bamboo-plugin $NEXT_VERSION --site="releases.jfrog.io" --sync

            # Update next development version
            - git checkout master
            - git merge origin/release
            - env -i PATH=$PATH M2_HOME=$M2_HOME HOME=$HOME ./jf mvn versions:set -DnewVersion=$NEXT_DEVELOPMENT_VERSION -B

            # Commit all changes to master
            - git clean -fd
            - git commit -am "[artifactory-release] Next development version [skipRun]"
            - git push

          onComplete:
            # Show tests in the *Tests* tab
            - save_tests $res_bambooReleaseGit_resourcePath/target/surefire-reports/
