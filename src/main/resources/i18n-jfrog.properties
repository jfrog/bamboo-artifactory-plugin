project.organization.name = JFrog
builder.gradle.pathHelp = Specify the location of your Gradle home
builder.npm.pathHelp = Specify the location of your npm home
builder.nuget.pathHelp = Specify the location of your NuGet home
builder.dotnet.pathHelp = Specify the location of your dotnet home
builder.ivy.pathHelp = Specify the location of your Ant home
builder.maven.pathHelp = Specify the location of your maven home
release.execute = Run Release
release.comment = Comment

##jfrogConfig.ftl
artifactory.server.tab.title = Artifactory Server Configuration
artifactory.server.manage.title = Artifactory Plugin Configuration
artifactory.server.manage.none = There are currently no Artifactory Servers defined
artifactory.server.details = Artifactory Server Configuration
artifactory.server.new = Add New Server Configuration
artifactory.server.edit = Edit Server Configuration
artifactory.server.add = New Artifactory Server
artifactory.server.delete = Delete Artifactory Server Configuration
artifactory.server.delete.confirm.title = Are you sure you want to delete this Artifactory server configuration?

artifactory.server.url = Artifactory Server URL
artifactory.server.url.description = Specify the root URL of your Artifactory installation. For example, http://repo.jfrog.org/artifactory
artifactory.server.username = Username
artifactory.server.username.description = User with permissions to query the list of Artifactory repositories. Leave empty if anonymous is enabled.
artifactory.server.password = Password
artifactory.server.password.description = Password of the user with permissions to query the list of Artifactory repositories. Leave empty if anonymous is enabled.
artifactory.server.timeout = Request Timeout
artifactory.server.timeout.description = Network timeout in seconds for connection establishment and for unanswered requests.

artifactory.release.submit = Build and Release to Artifactory
artifactory.release.title = Artifactory Pro Release Staging
artifactory,release.vcs.error = Artifactory Release Staging is not configured. It should be configured in the job configuration. For more information, please refer to the Bamboo Artifactory Plugin User Guide.

artifactory.gradle.properyKey = Property Key
artifactory.gradle.currentValue = Current Value
artifactory.gradle.releaseValue = Release Value
artifactory.gradle.nextIntegrationValue = Next Integration Value

artifactory.maven.moduleVersionConfiguration = Module Version Configuration
artifactory.maven.currentValue = Current Value
artifactory.maven.releaseValue = Release Value
artifactory.maven.nextIntegrationValue = Next Integration Value
artifactory.maven.moduleId = Module Id

artifactory.task.maven.projectFile = Override Project File
artifactory.task.maven.projectFile.description = If your project file is not named pom.xml, specify the project file name.
artifactory.task.maven.goals = Goals
artifactory.task.maven.additionalMavenParams = Additional Maven Parameters
artifactory.task.maven.mavenOpts = Maven Opts
artifactory.task.maven.mavenOpts.description = Space-separated parameters to pass as MAVEN_OPTS (e.g.: -Dmaven.repo.local=/mnt/work). \
  Note: MAVEN_OPTS added as System Environment Variables will be ignored!
artifactory.task.maven.resolveFromArtifacts = Resolve artifacts from Artifactory
artifactory.task.maven.resolveFromArtifacts.description = Check if you wish all dependency resolution to go through Artifactory. \
  <br/> Notice: this will override any external repository definition in Maven settings or POM files.
artifactory.task.maven.resolutionArtifactoryServerUrl = Resolution Artifactory Server URL
artifactory.task.maven.resolutionArtifactoryServerUrl.description = Select an Artifactory server.
artifactory.task.maven.resolutionRepo = Resolution repository
artifactory.task.maven.resolveCredentials = Override default resolver credentials
artifactory.task.maven.resolverUsername = Override Resolver Username
artifactory.task.maven.resolverUsername.description = Override the default username used for resolving dependencies from Artifactory.
artifactory.task.maven.resolverPassword = Override Resolver Password
artifactory.task.maven.resolverPassword.description = The password of the user entered above.
artifactory.task.maven.artifactoryServerUrl = Artifactory Server URL
artifactory.task.maven.artifactoryServerUrl.description = Select an Artifactory server.
artifactory.task.maven.targetRepo = Target Repository
artifactory.task.maven.targetRepo.description = Select a target deployment repository.
artifactory.task.maven.deployCredentials = Override default deployer credentials
artifactory.task.maven.deployerUsername = Override Deployer Username
artifactory.task.maven.deployerUsername.description = Override the default username used for deploying to Artifactory.
artifactory.task.maven.deployerPassword = Override Deployer Password
artifactory.task.maven.deployerPassword.description = The password of the user entered above.
artifactory.task.maven.deployMavenArtifacts = Deploy Maven Artifacts
artifactory.task.maven.deployMavenArtifacts.description = Uncheck if you do not wish to deploy Maven artifacts from the Artifactory plugin (a more efficient alternative to Maven\'s own \'deploy\' goal).
artifactory.task.maven.recordAllDependencies = Record Implicit Project Dependencies and Build-Time Dependencies
artifactory.task.maven.recordAllDependencies.description = Check if you wish build information published to Artifactory to include implicit project dependencies (for example, poms and parent poms of the project dependencies) as well as build-time dependencies (for example, maven plugins used during the build).
artifactory.task.maven.buildJdk = Build JDK*
artifactory.task.maven.buildJdk.description = Which JDK do you need to use for the build?

artifactory.task.gradle.switches = Command-Line Options
artifactory.task.gradle.switches.description = Gradle <a href="https://docs.gradle.org/current/userguide/tutorial_gradle_command_line.html" target="_blank">command-line options</a> to invoke.
artifactory.task.gradle.tasks = Tasks
artifactory.task.gradle.tasks.description = Gradle tasks to invoke.
artifactory.task.gradle.buildScript = Build Script Directory
artifactory.task.gradle.buildScript.description = If the build script is not located in the root of the build directory, specify the path (relative to the build directory).
artifactory.task.gradle.buildFile = Build Script File
artifactory.task.gradle.buildFile.description = If your gradle build script is not named build.gradle, specify the gradle build name script.
artifactory.task.gradle.useGradleWrapper = Use Gradle Wrapper
artifactory.task.gradle.gradleWrapperLocation = Gradle Wrapper Location
artifactory.task.gradle.gradleWrapperLocation.description = Path to the Gradle Wrapper executable. May be absolute or relative to the build directory. Defaults to ./gradlew
artifactory.task.gradle.artifactoryServerId = Artifactory Server URL
artifactory.task.gradle.artifactoryServerId.description = Select an Artifactory server.
artifactory.task.gradle.resolutionRepo = Resolution Repository
artifactory.task.gradle.resolutionRepo.description = Select a resolution repository.
artifactory.task.gradle.publishingRepo = Publishing Repository
artifactory.task.gradle.publishingRepo.description = Select a publishing repository.
artifactory.task.gradle.deployerCredentials = Override default deployer credentials
artifactory.task.gradle.deployerUsername = Override Deployer Username
artifactory.task.gradle.deployerUsername.description = Override the default username used for deploying to Artifactory.
artifactory.task.gradle.deployerPassword = Override Deployer Password
artifactory.task.gradle.deployerPassword.description = The password of the user entered above.
artifactory.task.gradle.useArtifactoryGradlePlugin = Project uses the Artifactory Gradle Plugin
artifactory.task.gradle.useArtifactoryGradlePlugin.description = The Bamboo plugin automatically applies the Artifactory plugin (and, consequently, the artifactoryPublish task) to all projects.\
                                                                 Check this flag to have Bamboo skip this step if your project is already using the Artifactory plugin or the artifactoryPublish task directly. All elements in this job configuration will override matching project-level configuration elements.\
                                                                 If your project applies the Artifactory plugin using a custom init script, make sure to include your init script as part of the list of Gradle switches.
artifactory.task.gradle.publishArtifacts = Publish Artifacts to Artifactory
artifactory.task.gradle.publishArtifacts.description = Check if you wish to publish produced build artifacts to Artifactory.
artifactory.task.gradle.publishForkCount = Number of threads used to publish artifacts
artifactory.task.gradle.publishForkCount.description = Change if you wish to use a different number of threads to publish artifacts.
artifactory.task.gradle.publishMavenDescriptors = Publish Maven Descriptors
artifactory.task.gradle.publishMavenDescriptors.description = Check if you wish to publish Gradle-generated POM files to Artifactory. Note: Maven descriptors are always deployed according to the Maven layout convention.
artifactory.task.gradle.publishIvyDescriptors = Publish Ivy Descriptors
artifactory.task.gradle.publishIvyDescriptors.description = Check if you wish to publish Gradle-generated ivy.xml descriptor files to Artifactory.
artifactory.task.gradle.useM2CompatiblePatterns = Use Maven 2 Compatible Patterns
artifactory.task.gradle.useM2CompatiblePatterns.description = Whether to use the default Maven 2 patterns when publishing artifacts and Ivy descriptors, or to use custom patterns.
artifactory.task.gradle.ivyPattern = Ivy Pattern
artifactory.task.gradle.ivyPattern.description = The <a href="http://ant.apache.org/ivy/history/latest-milestone/concept.html#patterns">pattern</a> to use for published Ivy descriptors.
artifactory.task.gradle.artifactPattern = Artifact Pattern
artifactory.task.gradle.artifactPattern.description = The <a href="http://ant.apache.org/ivy/history/latest-milestone/concept.html#patterns">pattern</a> to use for published artifacts.
artifactory.task.gradle.publishIncludePatterns = Publication Include Patterns
artifactory.task.gradle.publishIncludePatterns.description = Comma or space-separated list of <a href="http://ant.apache.org/manual/dirtasks.html#patterns" target="_blank">Ant-style patterns</a> \
                                                                 of files that will be included in publishing. Include patterns are applied on the published file path before any exclude patterns.
artifactory.task.gradle.publishExcludePatterns = Publication Exclude Patterns
artifactory.task.gradle.publishExcludePatterns.description = Comma or space-separated list of<a href="http://ant.apache.org/manual/dirtasks.html#patterns" target="_blank">Ant-style patterns</a> \
                                                                 of files that will be excluded from publishing. Exclude patterns are applied on the published file path before any exclude patterns.
artifactory.task.gradle.artifactSpecs = Artifact Properties
artifactory.task.gradle.artifactSpecs.description = A line-separated list of properties to attach to deployed artifacts.<br> \
                                                        Each lines specifies filtering rules by which to apply properties, in the format of:<br><br> \
                                                        <i>configurationName artifactFilter properties</i><br><br> \
                                                        <table border='0'> \
                                                        <tbody><tr> \
                                                        <td><i>configurationName: </i></td><td>The Gradle configuration. You can specify all to apply for all configurations.</td></tr> \
                                                        <tr><td><i>artifactFilter:</i></td><td>a filter in the format of group:artifact:version:classifier@ext - all fileds are mandatory and can take Ant-like wildcard patterns using * and ?. For example: org.acme:*:1.0.?_*:*@tgz</td></tr> \
                                                        <tr><td><i>properties:</i></td><td>a list of properties in the format of key1:val1, key2:val2, key3:val3<br></td> \
                                                        </tr></tbody></table><br>

artifactory.task.ivy.buildFile = Build File
artifactory.task.ivy.targets = Targets
artifactory.task.ivy.antOpts = Ant Opts
artifactory.task.ivy.antOpts.description = Space-separated parameters to pass as ANT_OPTS (Note that ANT_OPTS will be ignored if added as System Environment Variables).
artifactory.task.ivy.deployArtifacts = Deploy Artifacts
artifactory.task.ivy.deployArtifacts.description = Uncheck if you do not wish to deploy artifacts from the plugin.

# DotNet tasks
artifactory.task.dotnet.header.command.choice = Command
artifactory.task.dotnet.header.command.choice.description = The command to run.
artifactory.task.dotnet.header.workingSubdirectory = Working subdirectory
artifactory.task.dotnet.header.workingSubdirectory.description = Specify an alternative subdirectory as working directory for the task.
artifactory.task.dotnet.header.pushPattern = Path to NuGet package(s) to publish
artifactory.task.dotnet.header.pushPattern.description = The path to nupkg file(s) to be uploaded. Accepts wildcards.
artifactory.task.dotnet.header.pushTarget = Deployment path
artifactory.task.dotnet.header.pushTarget.description = Relative deployment path in the chosen repository.
artifactory.task.dotnet.header.resolutionArtifactoryServerId = Resolution Artifactory Server URL
artifactory.task.dotnet.header.resolutionArtifactoryServerId.description = Select an Artifactory server.
artifactory.task.dotnet.header.resolverUsername = Override Resolver Username
artifactory.task.dotnet.header.resolverUsername.description = Override the default username used for resolving from Artifactory.
artifactory.task.dotnet.header.resolverPassword = Override Resolver Password
artifactory.task.dotnet.header.resolverPassword.description = The password of the user entered above.
artifactory.task.dotnet.header.artifactoryServerId = Publishing Artifactory Server URL
artifactory.task.dotnet.header.artifactoryServerId.description = Select an Artifactory server.
artifactory.task.dotnet.header.deployerUsername = Override Deployer Username
artifactory.task.dotnet.header.deployerUsername.description = Override the default username used for deploying to Artifactory.
artifactory.task.dotnet.header.deployerPassword = Override Deployer Password
artifactory.task.dotnet.header.deployerPassword.description = The password of the user entered above.
artifactory.task.dotnet.header.resolutionRepo = Resolution repository
artifactory.task.dotnet.header.publishingRepo = Deployment repository

# NuGet
artifactory.task.nuget.header.nugetArguments = Arguments
artifactory.task.nuget.header.nugetArguments.description = The arguments which will be passed to NuGet for execution.

# DotNet Core
artifactory.task.dotnetCore.header.dotnetCoreArguments = Arguments
artifactory.task.dotnetCore.header.nugetArguments.description = The arguments which will be passed to .NET Core CLI for execution.


artifactory.task.npm.header.command.choice = Command
artifactory.task.npm.header.command.choice.description = The npm command to run.
artifactory.task.npm.header.install.npmArguments = Npm arguments
artifactory.task.npm.header.install.npmArguments.description = A list of npm arguments and options in the form of "--arg1=value1 --arg2=value2".
artifactory.task.npm.header.workingSubdirectory = Working subdirectory with package.json
artifactory.task.npm.header.workingSubdirectory.description = Specify an alternative subdirectory as working directory for the task. \
                                                        Path to the folder containing the target package.json and .npmrc files. Select the folder, not the file e.g. "/packages/mypackage".
artifactory.task.npm.header.resolutionArtifactoryServerId = Resolution Artifactory Server URL
artifactory.task.npm.header.resolutionArtifactoryServerId.description = Select an Artifactory server.
artifactory.task.npm.header.resolutionRepo = Npm Source Repository
artifactory.task.npm.header.resolverUsername = Override Resolver Username
artifactory.task.npm.header.resolverUsername.description = Override the default username used for deploying to Artifactory.
artifactory.task.npm.header.resolverPassword = Override Resolver Password
artifactory.task.npm.header.resolverPassword.description = The password of the user entered above.
artifactory.task.npm.header.artifactoryServerId = Publishing Artifactory Server URL
artifactory.task.npm.header.artifactoryServerId.description = Select an Artifactory server.
artifactory.task.npm.header.publishingRepo = Npm Target Repository
artifactory.task.npm.header.deployerUsername = Override Deployer Username
artifactory.task.npm.header.deployerUsername.description = Override the default username used for deploying to Artifactory.
artifactory.task.npm.header.deployerPassword = Override Deployer Password
artifactory.task.npm.header.deployerPassword.description = The password of the user entered above.

# Docker Task
artifactory.task.docker.header.command.choice = Command
artifactory.task.docker.header.command.choice.description = The docker command to run.
artifactory.task.docker.header.resolutionArtifactoryServerId = Resolution Artifactory Server URL
artifactory.task.docker.header.resolutionArtifactoryServerId.description = Select an Artifactory server.
artifactory.task.docker.header.resolutionRepo = Source Repository
artifactory.task.docker.header.resolverUsername = Override Resolver Username
artifactory.task.docker.header.resolverUsername.description = Override the default username used for resolving from Artifactory.
artifactory.task.docker.header.resolverPassword = Override Resolver Password
artifactory.task.docker.header.resolverPassword.description = The password of the user entered above.
artifactory.task.docker.header.artifactoryServerId = Publishing Artifactory Server URL
artifactory.task.docker.header.artifactoryServerId.description = Select an Artifactory server.
artifactory.task.docker.header.publishingRepo = Target Repository
artifactory.task.docker.header.deployerUsername = Override Deployer Username
artifactory.task.docker.header.deployerUsername.description = Override the default username used for deploying to Artifactory.
artifactory.task.docker.header.deployerPassword = Override Deployer Password
artifactory.task.docker.header.deployerPassword.description = The password of the user entered above.
artifactory.task.docker.header.host = Docker Daemon Host Address
artifactory.task.docker.header.host.description = If the docker daemon host is not specified, "/var/run/docker.sock" is used as a default value.
artifactory.task.docker.header.imageName = Image Name
artifactory.task.docker.header.imageName.description = Docker image to use [DOMAIN]/[NAME]:[TAG].

artifactory.task.deploy.download.title = Artifactory Download

artifactory.task.deploy.title = Artifactory Deployment
artifactory.task.generic.deploy.title = Artifactory Generic Deploy
artifactory.task.generic.deployPattern = Published artifacts
artifactory.task.generic.deployPatternFileSpec = Upload spec source
artifactory.task.generic.deployPatternFileSpec.jobConfiguration = Spec
artifactory.task.generic.deployPatternFileSpec.file = File path
artifactory.task.generic.deployerCredentials = Override default deployer credentials
artifactory.task.generic.deployPattern.description = New line or comma separated paths to build artifacts that will be published to Artifactory. Supports Ant-style<br/> wildcards mapping to target directories. E.g.:<br/> \
                                                     <b>**/*.zip=>winFiles</b> - Deploys all zip files under the working directory to the winFiles directory of the target repository, maintaining the original relative path for each file.<br/> \
                                                     <b>unix/*.tgz</b> - Deploys all tgz files under the unix directory to the root directory of the target repository, maintaining the original relative path for each file.<br/>
artifactory.task.generic.deployPatternFileSpec.jobConfiguration.description = To upload files, you need to create a File Spec. <br/> \
                                                                              More information about File Specs can be found in the Bamboo Artifactory Plugin User Guide.
artifactory.task.generic.deployPatternFileSpec.file.description = To upload files, you need to create a File Spec. <br/> \
                                                                  More information about File Specs can be found in the Bamboo Artifactory Plugin User Guide.

artifactory.task.generic.resolve.title = Artifactory Generic Resolve
artifactory.task.generic.resolvePattern = Download artifacts
artifactory.task.generic.resolvePatternFileSpec = Download spec source
artifactory.task.generic.resolvePatternFileSpec.jobConfiguration = Spec
artifactory.task.generic.resolvePatternFileSpec.file = File path
artifactory.task.generic.resolveCredentials = Override default resolver credentials
artifactory.task.generic.resolvePattern.description = New line or comma separated references to other build artifacts that this build should use as dependencies.<br/>  \
                                                      Each reference is specified in the format of: <b>repo_key:path_pattern[;prop=val1,val2[;prop2+=val3]@build_name#build_number[=>target_dir]</b>, where: <br/> \
                                                      <b>repo_key</b> - A key of the Artifactory repository that contains the dependencies (may contain the * and the ? wildcards).<br/> \
                                                      <b>path_pattern</b> - An Ant-like pattern of the dependencies path within the Artifactory (may contain the * and the ? wildcards, including **).<br/> \
                                                      For example: repo-key:dir/*/bob/*.zip (** wilcards are supported only if you combine with matrix params) <br/> \
                                                      Artifacts can be downloaded conditionally based on their property values in Artifactory.<br/> \
                                                      For example, to download all zip files marked as production ready: <b>repo-key:dir/*/bob/*.zip;status+=prod</b>.<br/> \
                                                      For more details see the plug-in's documentation.<br/> \
                                                      <b>build_name</b> - The name of the build that was published to Artifactory, of which dependencies should be resolved.<br/> \
                                                      <b>build_number</b> - A specific build run number. Can be <b>LATEST</b> to depend on the latest build run, or <b>LAST_RELEASE</b> to depend on the latest build with a "release" status.<br/> \
                                                      For example: <b>repo-key:dir/**/bob/*.zip@myBuild#LATEST</b><br/> \
                                                      <b>target_dir</b> - An optional target directory to where resolved dependencies will be downloaded.<br/> \
                                                      By default dependencies will be downloaded to a path under the build workspace.<br/> \
                                                      For example: <b>repo-key:*.zip=>winFiles, repo-key:unix/distro.tgz=>linuxFiles</b>, where <b>winFiles</b> and <b>linuxFiles</b> are target directories.<br/> \
                                                      Target directories can either be absolute or relative to the working directory.<br/> \
                                                      Use =!> instead of => to delete any locally found files which are not downloaded from Artifactory.<br/> \
                                                      Pattern value can take environment variables. For example: repo-key/*.xml=>${BUILD_ID}-${BUILD_NUMBER}
artifactory.task.generic.resolvePatternFileSpec.jobConfiguration.description = To download files, you need to create a File Spec. <br/> \
                                                                               More information about File Specs can be found in the Bamboo Artifactory Plugin User Guide.
artifactory.task.generic.resolvePatternFileSpec.file.description = To download files, you need to create a File Spec. <br/> \
                                                                   More information about File Specs can be found in the Bamboo Artifactory Plugin User Guide.

#Artifactory Tasks
artifactory.task.properties = Deployment properties
artifactory.task.properties.description = Semicolon separated list of key and values. \
                                          For example buildStatus=released;deployed=admin
artifactory.task.deployIncludePatterns = Deployment Include Patterns
artifactory.task.deployIncludePatterns.description = Comma or space-separated list of <a href="http://ant.apache.org/manual/dirtasks.html#patterns" target="_blank">Ant-style patterns</a> \
  of files that will be included in publishing. Include patterns are applied on the published file path before any exclude patterns.
artifactory.task.deployExcludePatterns = Deployment Exclude Patterns
artifactory.task.deployExcludePatterns.description = Comma or space-separated list of <a href="http://ant.apache.org/manual/dirtasks.html#patterns" target="_blank">Ant-style patterns</a> \
  of files that will be excluded from publishing. Exclude patterns are applied on the published file path after any include patterns.
artifactory.task.filterExcludedArtifactsFromBuild = Filter excluded artifacts from build Info
artifactory.task.filterExcludedArtifactsFromBuild.description = Add the excluded files to the excludedArtifacts list and remove them from the artifacts list in the build info.
artifactory.task.publishBuildInfo = Capture and Publish Build Info
artifactory.task.publishBuildInfo.description = Check if you wish to publish build information to Artifactory.
artifactory.task.captureBuildInfo = Capture Build Info
artifactory.task.captureBuildInfo.description = Check if you wish to capture build information to Artifactory. To publish build information, use the publish build info task.
artifactory.task.buildName = Build Name
artifactory.task.buildName.description = To use the default build name of the plan, set the field to '${bamboo.buildPlanName}'.
artifactory.task.buildNumber = Build Number
artifactory.task.buildNumber.description = To use the default build number of the plan, set the field to '${bamboo.buildNumber}'.
artifactory.task.sharedCredentials = Shared credentials

artifactory.task.includeEnvVars = Include Environment Variables
artifactory.task.includeEnvVars.description = Check if you wish to include all environment variables accessible by the builds process.
artifactory.task.envVarsIncludePatterns = Environment Variables Include Patterns
artifactory.task.envVarsIncludePatterns.description = Comma or space-separated list of environment variables that will be included as part of the published build info. \
  Environment variables may contain the * and the ? wildcards. Include patterns are applied before any exclude patterns.
artifactory.task.envVarsExcludePatterns = Environment Variables Exclude Patterns
artifactory.task.envVarsExcludePatterns.description = Comma or space-separated list of environment variables that will be excluded as part of the published build info. \
  Environment variables may contain the * and the ? wildcards. Exclude patterns are applied after any include patterns.
artifactory.task.buildConfigurationsTitle = Build
artifactory.task.resolutionConfigurationsTitle = Resolution
artifactory.task.deploymentConfigurationsTitle = Deployment
artifactory.task.buildInfoTitle = Build Info
artifactory.task.buildInfoReleaseManagementTitle = Build Info and Release Management
artifactory.task.advancedTitle = Advanced
artifactory.task.serverSelection = Server

#Release Management
artifactory.task.release.enableReleaseManagement = Enable Release Management
artifactory.task.release.enableReleaseManagement.description = Enable Release Management to Artifactory
artifactory.task.release.vcsTagBase = VCS Tags Base URL/Name
artifactory.task.release.vcsTagBase.description = This is the name of the tag/label.
artifactory.task.release.gitReleaseBranch = Git Release Branch Name Prefix
artifactory.task.release.gitReleaseBranch.description = The prefix of the release branch name (applicable only to Git).
artifactory.task.release.alternativeTasks = Alternative Maven Tasks and Options
artifactory.task.release.alternativeTasks.description = Alternative Maven and options to execute for a Maven build running as part of the release. \
  If left empty, the build will use original tasks and options instead of replacing them.
artifactory.task.release.releaseProps = Release Properties
artifactory.task.release.releaseProps.description = Properties in your projects gradle.properties file whose value should change upon release.
artifactory.task.release.nextIntegProps = Next Integration Properties
artifactory.task.release.nextIntegProps.description = Properties in your projects gradle.properties file whose value should change upon release, but also for work on the next integration/development version after the release has been created.
artifactory.task.release.gradle.alternativeTasks = Alternative Gradle Tasks and Options
artifactory.task.release.gradle.alternativeTasks.description = Alternative tasks and options to execute for a Gradle build running as part of the release. If left empty, the build will use original tasks and options instead of replacing them.

#VCS
artifactory.vcs.type = VCS Type
artifactory.vcs.type.git = Git
artifactory.vcs.type.perforce = Perforce
artifactory.vcs.git.url = Git URL
artifactory.vcs.git.username = Git Username
artifactory.vcs.git.password = Git Password
artifactory.vcs.git.ssh.key = SSH Key
artifactory.vcs.git.ssh.passphrase = SSH Passphrase
artifactory.vcs.p4.port = Port
artifactory.vcs.p4.client = Client (workspace)
artifactory.vcs.p4.depot = Depot view
artifactory.vcs.p4.username = Username
artifactory.vcs.p4.password = Password
artifactory.vcs.git.authenticationType = VCS Authentication Type
artifactory.vcs.git.authenticationType.none = None
artifactory.vcs.git.authenticationType.password = Username and Password
artifactory.vcs.git.authenticationType.ssh_keypair = SSH Key
artifactory.vcs.useReleaseBranch = Use Release Branch:
artifactory.vcs.releaseBranch = Release branch:
artifactory.vcs.createVcsTag = Create VCS Tag
artifactory.vcs.tagUrl = Tag URL/name:
artifactory.vcs.tagComment = Tag comment:
artifactory.vcs.nextDevelopmentComment = Next development version comment:
artifactory.vcs.releasePublishingRepo = Publishing Repository:
artifactory.vcs.releasePublishingRepo.description = Select a publishing repository.
artifactory.vcs.stagingComment = Staging Comment:

#Artifactory Xray Scan
artifactory.task.xrayScan.title = Xray Scan
artifactory.task.xrayScan.username = Username
artifactory.task.xrayScan.username.description = Name of a user with deployment permissions on the target repository.
artifactory.task.xrayScan.password = Password
artifactory.task.xrayScan.password.description = The password of the user entered above.
artifactory.task.xrayScan.failIfVulnerable = Fail build if found vulnerable
artifactory.task.xrayScan.failIfVulnerable.description = Uncheck if you do not wish to fail the build if found vulnerable.

#Artifactory Publish build info
artifactory.task.publishBuildInfo.title = Publish Build Info
artifactory.task.publishBuildInfo.header.username = Override Default Username
artifactory.task.publishBuildInfo.header.username.description = Override the default username used for deploying the build info to Artifactory.
artifactory.task.publishbuildinfo.header.password = Override Default Password
artifactory.task.publishbuildinfo.header.password.description = The password of the user entered above.

#Artifactory Collect Build Issues
artifactory.task.collectBuildIssues.title = Artifactory Collect Build Issues
artifactory.task.collectBuildIssues.header.config.source = Config Source
artifactory.task.collectBuildIssues.header.config.filePath = Config File Path
artifactory.task.collectBuildIssues.header.config.filePath.description = To collect build issues, you need to provide a config file. <br/> \
                                                                    More information about this task can be found in the Bamboo Artifactory Plugin User Guide.
artifactory.task.collectBuildIssues.header.config.json = Config Json
artifactory.task.collectBuildIssues.header.config.json.description = To collect build issues, you need to provide a config file. <br/> \
                                                                More information about this task can be found in the Bamboo Artifactory Plugin User Guide.
artifactory.task.collectBuildIssues.header.username = Override Default Username
artifactory.task.collectBuildIssues.header.username.description = Override the default username used for reading the information of previous build runs from Artifactory.
artifactory.task.collectBuildIssues.header.password = Override Default Password
artifactory.task.collectBuildIssues.header.password.description = The password of the user entered above.

#errors:
error.title=Artifactory error reporting
error.heading=An unexpected error has occurred